Index: app/src/main/res/layout/activity_main.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<androidx.constraintlayout.widget.ConstraintLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    tools:context=\".MainActivity\">\r\n\r\n\r\n    <Button\r\n        android:id=\"@+id/addtask\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_marginStart=\"30dp\"\r\n        android:layout_marginLeft=\"30dp\"\r\n        android:layout_marginTop=\"316dp\"\r\n        android:layout_marginEnd=\"41dp\"\r\n        android:layout_marginRight=\"41dp\"\r\n        android:background=\"#E31B1B\"\r\n        android:onClick=\"addTaskPage\"\r\n        android:text=\"Add Task\"\r\n        app:layout_constraintEnd_toStartOf=\"@+id/uSettings\"\r\n        app:layout_constraintHorizontal_bias=\"0.333\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toTopOf=\"parent\" />\r\n\r\n    <Button\r\n        android:id=\"@+id/alltask\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_marginStart=\"286dp\"\r\n        android:layout_marginLeft=\"286dp\"\r\n        android:layout_marginTop=\"316dp\"\r\n        android:layout_marginEnd=\"30dp\"\r\n        android:layout_marginRight=\"30dp\"\r\n        android:background=\"#E31B1B\"\r\n        android:onClick=\"allTaskPage\"\r\n        android:text=\"All Tasks\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintHorizontal_bias=\"0.987\"\r\n        app:layout_constraintStart_toEndOf=\"@+id/uSettings\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toTopOf=\"parent\" />\r\n\r\n    <ImageView\r\n        android:id=\"@+id/imageView\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"580px\"\r\n        android:layout_marginTop=\"85dp\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintHorizontal_bias=\"0.0\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toTopOf=\"parent\"\r\n        app:srcCompat=\"@drawable/task\" />\r\n\r\n    <androidx.recyclerview.widget.RecyclerView\r\n        android:id=\"@+id/recyclerView\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"150dp\"\r\n        android:layout_marginStart=\"12dp\"\r\n        android:layout_marginLeft=\"12dp\"\r\n        android:layout_marginTop=\"432dp\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintHorizontal_bias=\"0.488\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toTopOf=\"parent\" />\r\n\r\n    <Button\r\n        android:id=\"@+id/uSettings\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_marginTop=\"316dp\"\r\n        android:layout_marginEnd=\"44dp\"\r\n        android:layout_marginRight=\"44dp\"\r\n        android:background=\"#E31B1B\"\r\n        android:onClick=\"goToSettings\"\r\n        android:text=\"Settings\"\r\n        app:layout_constraintEnd_toStartOf=\"@+id/alltask\"\r\n        app:layout_constraintTop_toTopOf=\"parent\" />\r\n\r\n    <TextView\r\n        android:id=\"@+id/welcome\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"0dp\"\r\n        android:layout_marginStart=\"176dp\"\r\n        android:layout_marginLeft=\"176dp\"\r\n        android:layout_marginTop=\"392dp\"\r\n        android:layout_marginEnd=\"176dp\"\r\n        android:layout_marginRight=\"176dp\"\r\n        android:text=\"TextView\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintHorizontal_bias=\"0.0\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toTopOf=\"parent\" />\r\n\r\n    <TextView\r\n        android:id=\"@+id/mytasks\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:text=\"My Tasks\"\r\n        android:textColor=\"#000000\"\r\n        android:textSize=\"24sp\"\r\n        app:layout_constraintBottom_toBottomOf=\"parent\"\r\n        app:layout_constraintHorizontal_bias=\"0.522\"\r\n        app:layout_constraintLeft_toLeftOf=\"parent\"\r\n        app:layout_constraintRight_toRightOf=\"parent\"\r\n        app:layout_constraintTop_toTopOf=\"parent\"\r\n        app:layout_constraintVertical_bias=\"0.06\" />\r\n\r\n</androidx.constraintlayout.widget.ConstraintLayout>\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/activity_main.xml	(revision 3dbe1fa09618ad89b139365c356d1672d80f1dc1)
+++ app/src/main/res/layout/activity_main.xml	(date 1623101206731)
@@ -101,11 +101,41 @@
         android:textColor="#000000"
         android:textSize="24sp"
         app:layout_constraintBottom_toBottomOf="parent"
-        app:layout_constraintHorizontal_bias="0.522"
+        app:layout_constraintHorizontal_bias="0.498"
+        app:layout_constraintLeft_toLeftOf="parent"
+        app:layout_constraintRight_toRightOf="parent"
+        app:layout_constraintTop_toTopOf="parent"
+        app:layout_constraintVertical_bias="0.047" />
+
+    <Button
+        android:id="@+id/signUp"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:text="Sign Up"
+        android:textColor="#000000"
+        android:textSize="24sp"
+        android:onClick="gotOSignUP"
+        app:layout_constraintBottom_toBottomOf="parent"
+        app:layout_constraintHorizontal_bias="0.945"
         app:layout_constraintLeft_toLeftOf="parent"
         app:layout_constraintRight_toRightOf="parent"
         app:layout_constraintTop_toTopOf="parent"
-        app:layout_constraintVertical_bias="0.06" />
+        app:layout_constraintVertical_bias="0.55"/>
 
-</androidx.constraintlayout.widget.ConstraintLayout>
+    <Button
+        android:id="@+id/logIn"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:onClick="goToLogin"
+        android:text="Log in"
+        android:textColor="#000000"
+        android:textSize="24sp"
+        app:layout_constraintBottom_toBottomOf="parent"
+        app:layout_constraintHorizontal_bias="0.051"
+        app:layout_constraintLeft_toLeftOf="parent"
+        app:layout_constraintRight_toRightOf="parent"
+        app:layout_constraintTop_toTopOf="parent"
+        app:layout_constraintVertical_bias="0.55" />
+
 
+</androidx.constraintlayout.widget.ConstraintLayout>
\ No newline at end of file
Index: app/src/main/java/com/example/taskmaster/MainActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.taskmaster;\r\n\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.recyclerview.widget.LinearLayoutManager;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\nimport androidx.room.Room;\r\n\r\nimport android.content.Intent;\r\nimport android.content.SharedPreferences;\r\nimport android.os.Bundle;\r\nimport android.preference.PreferenceManager;\r\nimport android.util.Log;\r\nimport android.view.View;\r\nimport android.widget.AdapterView;\r\nimport android.widget.Button;\r\nimport android.widget.EditText;\r\nimport android.widget.TextView;\r\n\r\nimport com.amplifyframework.AmplifyException;\r\nimport com.amplifyframework.core.Amplify;\r\nimport com.amplifyframework.datastore.AWSDataStorePlugin;\r\nimport com.amplifyframework.datastore.generated.model.TaskModel;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\n\r\npublic class MainActivity extends AppCompatActivity implements TaskAdapter.OnItemClickListener {\r\n\r\n    String title1,title2,title3;\r\n    private TextView taskTitle;\r\n    private TextView taskBody;\r\n    private TextView taskState;\r\n    public TaskDatabase db;\r\n    public TaskDao taskDao;\r\n    TaskAdapter taskAdapter;\r\n    RecyclerView recyclerView ;\r\n\r\n    List<Task> tasks = new ArrayList<>();\r\n\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n\r\n\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_main);\r\n        getSupportActionBar().setTitle(\"My Tasks\");\r\n\r\n        taskTitle = findViewById(R.id.tTitle);\r\n        taskBody = findViewById(R.id.tBody);\r\n        taskState =findViewById(R.id.tState);\r\n\r\n        try {\r\n            Amplify.addPlugin(new AWSDataStorePlugin());\r\n            Amplify.configure(getApplicationContext());\r\n\r\n            Log.i(\"Tutorial\", \"Initialized Amplify\");\r\n        } catch (AmplifyException e) {\r\n            Log.e(\"Tutorial\", \"Could not initialize Amplify\", e);\r\n        }\r\n\r\n        TextView welcomeMsg = findViewById(R.id.welcome);\r\n        SharedPreferences sharedPreferences = PreferenceManager.getDefaultSharedPreferences(this);\r\n        welcomeMsg.setText(sharedPreferences.getString(\"username\", \"User\") + \"'s Tasks\");\r\n\r\n//        db= Room.databaseBuilder(getApplicationContext(),\r\n//                TaskDatabase.class, \"task_database\").allowMainThreadQueries().build();\r\n//        taskDao = db.taskDao();\r\n//        tasks = (ArrayList<Task>) taskDao.getAllTasks();\r\n        recyclerView = findViewById(R.id.recyclerView);\r\n        LinearLayoutManager layoutManager = new LinearLayoutManager(this);\r\n        recyclerView.setLayoutManager(layoutManager);\r\n        recyclerView.setHasFixedSize(true);\r\n        recyclerView.setLayoutManager(new LinearLayoutManager(this));\r\n\r\n        Amplify.DataStore.query(TaskModel.class,\r\n                todos -> {\r\n                    List<Task> taskList = new ArrayList<>();\r\n                    while (todos.hasNext()) {\r\n                        TaskModel todo = todos.next();\r\n                        Task t = new Task();\r\n                        Log.i(\"Tutorial\", \"==== Todo ====\");\r\n                        Log.i(\"Tutorial\", \"Name: \" + todo.getTitle());\r\n                        Log.i(\"Tutorial\", \"Name: \" + todo.getBody());\r\n                        Log.i(\"Tutorial\", \"Name: \" + todo.getState());\r\n                        t.setTitle(todo.getTitle());\r\n                        t.setBody(todo.getBody());\r\n                        t.setState(todo.getState());\r\n                        taskList.add(t);\r\n                        taskAdapter = new TaskAdapter(MainActivity.class,taskList);\r\n\r\n                    }\r\n                    recyclerView.setAdapter(taskAdapter);\r\n                },\r\n                failure -> Log.e(\"Tutorial\", \"Could not query DataStore\", failure)\r\n        );\r\n\r\n\r\n    }\r\n\r\n    public void addTaskPage(View view) {\r\n        Intent addTask = new Intent(MainActivity.this,AddTask.class);\r\n\r\n        startActivity(addTask);\r\n    }\r\n\r\n    public void allTaskPage(View view) {\r\n        Intent allTasks = new Intent(MainActivity.this,alltasks.class);\r\n        startActivity(allTasks);\r\n\r\n    }\r\n\r\n\r\n    public void goToSettings(View view) {\r\n        Intent settingActivity = new Intent(MainActivity.this,UserSetting.class);\r\n        startActivity(settingActivity);\r\n\r\n    }\r\n\r\n\r\n    @Override\r\n    public void onItemClick(int position) {\r\n\r\n        Intent intent =new Intent(this, Details.class);\r\n        intent.putExtra(\"title\",tasks.get(position).getTitle());\r\n        intent.putExtra(\"body\",tasks.get(position).getBody());\r\n        intent.putExtra(\"state\",tasks.get(position).getState());\r\n\r\n        startActivity(intent);\r\n    }\r\n\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/taskmaster/MainActivity.java	(revision 3dbe1fa09618ad89b139365c356d1672d80f1dc1)
+++ app/src/main/java/com/example/taskmaster/MainActivity.java	(date 1623138283282)
@@ -17,6 +17,7 @@
 import android.widget.TextView;
 
 import com.amplifyframework.AmplifyException;
+import com.amplifyframework.auth.cognito.AWSCognitoAuthPlugin;
 import com.amplifyframework.core.Amplify;
 import com.amplifyframework.datastore.AWSDataStorePlugin;
 import com.amplifyframework.datastore.generated.model.TaskModel;
@@ -41,11 +42,12 @@
     @Override
     protected void onCreate(Bundle savedInstanceState) {
 
-
         super.onCreate(savedInstanceState);
         setContentView(R.layout.activity_main);
         getSupportActionBar().setTitle("My Tasks");
 
+
+
         taskTitle = findViewById(R.id.tTitle);
         taskBody = findViewById(R.id.tBody);
         taskState =findViewById(R.id.tState);
@@ -63,37 +65,42 @@
         SharedPreferences sharedPreferences = PreferenceManager.getDefaultSharedPreferences(this);
         welcomeMsg.setText(sharedPreferences.getString("username", "User") + "'s Tasks");
 
-//        db= Room.databaseBuilder(getApplicationContext(),
-//                TaskDatabase.class, "task_database").allowMainThreadQueries().build();
-//        taskDao = db.taskDao();
-//        tasks = (ArrayList<Task>) taskDao.getAllTasks();
+        db= Room.databaseBuilder(getApplicationContext(),
+                TaskDatabase.class, "task_database").allowMainThreadQueries().build();
+        taskDao = db.taskDao();
+        tasks = (ArrayList<Task>) taskDao.getAllTasks();
         recyclerView = findViewById(R.id.recyclerView);
         LinearLayoutManager layoutManager = new LinearLayoutManager(this);
         recyclerView.setLayoutManager(layoutManager);
         recyclerView.setHasFixedSize(true);
         recyclerView.setLayoutManager(new LinearLayoutManager(this));
 
-        Amplify.DataStore.query(TaskModel.class,
-                todos -> {
-                    List<Task> taskList = new ArrayList<>();
-                    while (todos.hasNext()) {
-                        TaskModel todo = todos.next();
-                        Task t = new Task();
-                        Log.i("Tutorial", "==== Todo ====");
-                        Log.i("Tutorial", "Name: " + todo.getTitle());
-                        Log.i("Tutorial", "Name: " + todo.getBody());
-                        Log.i("Tutorial", "Name: " + todo.getState());
-                        t.setTitle(todo.getTitle());
-                        t.setBody(todo.getBody());
-                        t.setState(todo.getState());
-                        taskList.add(t);
-                        taskAdapter = new TaskAdapter(MainActivity.class,taskList);
+//        Amplify.DataStore.query(TaskModel.class,
+//                todos -> {
+//                    List<Task> taskList = new ArrayList<>();
+//                    while (todos.hasNext()) {
+//                        TaskModel todo = todos.next();
+//                        Task t = new Task();
+//                        Log.i("Tutorial", "==== Todo ====");
+//                        Log.i("Tutorial", "Name: " + todo.getTitle());
+//                        Log.i("Tutorial", "Name: " + todo.getBody());
+//                        Log.i("Tutorial", "Name: " + todo.getState());
+//                        t.setTitle(todo.getTitle());
+//                        t.setBody(todo.getBody());
+//                        t.setState(todo.getState());
+//                        taskList.add(t);
+//                        taskAdapter = new TaskAdapter(MainActivity.class,taskList);
+//
+//                    }
+//                    recyclerView.setAdapter(taskAdapter);
+//                },
+//                failure -> Log.e("Tutorial", "Could not query DataStore", failure)
+//
+//
+//
+//        );
 
-                    }
-                    recyclerView.setAdapter(taskAdapter);
-                },
-                failure -> Log.e("Tutorial", "Could not query DataStore", failure)
-        );
+
 
 
     }
@@ -130,4 +137,11 @@
     }
 
 
+    public void gotOSignUP(View view) {
+        Intent signup = new Intent( MainActivity.this, SignUp.class);
+        startActivity(signup);
+    }
+
+    public void goToLogin(View view) {
+    }
 }
Index: amplify/backend/api/amplifyDatasource/transform.conf.json
===================================================================
--- amplify/backend/api/amplifyDatasource/transform.conf.json	(revision 3dbe1fa09618ad89b139365c356d1672d80f1dc1)
+++ amplify/backend/api/amplifyDatasource/transform.conf.json	(revision 3dbe1fa09618ad89b139365c356d1672d80f1dc1)
@@ -1,10 +0,0 @@
-{
-    "Version": 5,
-    "ResolverConfig": {
-        "project": {
-            "ConflictHandler": "AUTOMERGE",
-            "ConflictDetection": "VERSION"
-        }
-    },
-    "ElasticsearchWarning": true
-}
\ No newline at end of file
Index: amplify/backend/api/amplifyDatasource/parameters.json
===================================================================
--- amplify/backend/api/amplifyDatasource/parameters.json	(revision 3dbe1fa09618ad89b139365c356d1672d80f1dc1)
+++ amplify/backend/api/amplifyDatasource/parameters.json	(revision 3dbe1fa09618ad89b139365c356d1672d80f1dc1)
@@ -1,5 +0,0 @@
-{
-  "AppSyncApiName": "amplifyDatasource",
-  "DynamoDBBillingMode": "PAY_PER_REQUEST",
-  "DynamoDBEnableServerSideEncryption": "false"
-}
Index: amplify/backend/api/amplifyDatasource/stacks/CustomResources.json
===================================================================
--- amplify/backend/api/amplifyDatasource/stacks/CustomResources.json	(revision 3dbe1fa09618ad89b139365c356d1672d80f1dc1)
+++ amplify/backend/api/amplifyDatasource/stacks/CustomResources.json	(revision 3dbe1fa09618ad89b139365c356d1672d80f1dc1)
@@ -1,58 +0,0 @@
-{
-  "AWSTemplateFormatVersion": "2010-09-09",
-  "Description": "An auto-generated nested stack.",
-  "Metadata": {},
-  "Parameters": {
-    "AppSyncApiId": {
-      "Type": "String",
-      "Description": "The id of the AppSync API associated with this project."
-    },
-    "AppSyncApiName": {
-      "Type": "String",
-      "Description": "The name of the AppSync API",
-      "Default": "AppSyncSimpleTransform"
-    },
-    "env": {
-      "Type": "String",
-      "Description": "The environment name. e.g. Dev, Test, or Production",
-      "Default": "NONE"
-    },
-    "S3DeploymentBucket": {
-      "Type": "String",
-      "Description": "The S3 bucket containing all deployment assets for the project."
-    },
-    "S3DeploymentRootKey": {
-      "Type": "String",
-      "Description": "An S3 key relative to the S3DeploymentBucket that points to the root\nof the deployment directory."
-    }
-  },
-  "Resources": {
-    "EmptyResource": {
-      "Type": "Custom::EmptyResource",
-      "Condition": "AlwaysFalse"
-    }
-  },
-  "Conditions": {
-    "HasEnvironmentParameter": {
-      "Fn::Not": [
-        {
-          "Fn::Equals": [
-            {
-              "Ref": "env"
-            },
-            "NONE"
-          ]
-        }
-      ]
-    },
-    "AlwaysFalse": {
-      "Fn::Equals": ["true", "false"]
-    }
-  },
-  "Outputs": {
-    "EmptyOutput": {
-      "Description": "An empty output. You may delete this if you have at least one resource above.",
-      "Value": ""
-    }
-  }
-}
Index: amplify/backend/storage/AyaStorage/s3-cloudformation-template.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- amplify/backend/storage/AyaStorage/s3-cloudformation-template.json	(date 1622729973119)
+++ amplify/backend/storage/AyaStorage/s3-cloudformation-template.json	(date 1622729973119)
@@ -0,0 +1,657 @@
+{
+	"AWSTemplateFormatVersion": "2010-09-09",
+	"Description": "S3 resource stack creation using Amplify CLI",
+	"Parameters": {
+		"bucketName": {
+			"Type": "String"
+		},
+		"authPolicyName": {
+			"Type": "String"
+		},
+		"unauthPolicyName": {
+			"Type": "String"
+		},
+		"authRoleName": {
+			"Type": "String"
+		},
+		"unauthRoleName": {
+			"Type": "String"
+		},
+		"s3PublicPolicy": {
+			"Type": "String",
+			"Default" : "NONE"
+		},
+		"s3PrivatePolicy": {
+			"Type": "String",
+			"Default" : "NONE"
+		},
+		"s3ProtectedPolicy": {
+			"Type": "String",
+			"Default" : "NONE"
+		},
+		"s3UploadsPolicy": {
+			"Type": "String",
+			"Default" : "NONE"
+		},
+		"s3ReadPolicy": {
+			"Type": "String",
+			"Default" : "NONE"
+		},
+		"s3PermissionsAuthenticatedPublic": {
+			"Type": "String",
+			"Default" : "DISALLOW"
+		},
+		"s3PermissionsAuthenticatedProtected": {
+			"Type": "String",
+			"Default" : "DISALLOW"
+		},
+		"s3PermissionsAuthenticatedPrivate": {
+			"Type": "String",
+			"Default" : "DISALLOW"
+		},
+		"s3PermissionsAuthenticatedUploads": {
+			"Type": "String",
+			"Default" : "DISALLOW"
+		},
+		"s3PermissionsGuestPublic": {
+			"Type": "String",
+			"Default" : "DISALLOW"
+		},
+		"s3PermissionsGuestUploads": {
+			"Type": "String",
+			"Default" : "DISALLOW"		},
+		"AuthenticatedAllowList": {
+			"Type": "String",
+			"Default" : "DISALLOW"
+		},
+		"GuestAllowList": {
+			"Type": "String",
+			"Default" : "DISALLOW"
+		},
+		"selectedGuestPermissions": {
+			"Type": "CommaDelimitedList",
+			"Default" : "NONE"
+		},
+		"selectedAuthenticatedPermissions": {
+			"Type": "CommaDelimitedList",
+			"Default" : "NONE"
+		},
+		"env": {
+			"Type": "String"
+		},
+		"triggerFunction": {
+			"Type": "String"
+		}
+	
+
+	},
+	"Conditions": {
+		"ShouldNotCreateEnvResources": {
+			"Fn::Equals": [
+				{
+					"Ref": "env"
+				},
+				"NONE"
+			]
+		},
+		"CreateAuthPublic": {
+			"Fn::Not" : [{
+				"Fn::Equals" : [
+					 {"Ref" : "s3PermissionsAuthenticatedPublic"},
+					 "DISALLOW"
+				]
+		 }]
+		},
+		"CreateAuthProtected": {
+			"Fn::Not" : [{
+				"Fn::Equals" : [
+					 {"Ref" : "s3PermissionsAuthenticatedProtected"},
+					 "DISALLOW"
+				]
+		 }]
+		},
+		"CreateAuthPrivate": {
+			"Fn::Not" : [{
+				"Fn::Equals" : [
+					 {"Ref" : "s3PermissionsAuthenticatedPrivate"},
+					 "DISALLOW"
+				]
+		 }]
+		},
+		"CreateAuthUploads": {
+			"Fn::Not" : [{
+				"Fn::Equals" : [
+					 {"Ref" : "s3PermissionsAuthenticatedUploads"},
+					 "DISALLOW"
+				]
+		 }]
+		},
+		"CreateGuestPublic": {
+			"Fn::Not" : [{
+				"Fn::Equals" : [
+					 {"Ref" : "s3PermissionsGuestPublic"},
+					 "DISALLOW"
+				]
+		 }]
+		},
+		"CreateGuestUploads": {
+			"Fn::Not" : [{
+				"Fn::Equals" : [
+					 {"Ref" : "s3PermissionsGuestUploads"},
+					 "DISALLOW"
+				]
+		 }]
+		},
+		"AuthReadAndList": {
+			"Fn::Not" : [{
+				"Fn::Equals" : [
+					 {"Ref" : "AuthenticatedAllowList"},
+					 "DISALLOW"
+				]
+		 }]
+		},
+		"GuestReadAndList": {
+			"Fn::Not" : [{
+				"Fn::Equals" : [
+					 {"Ref" : "GuestAllowList"},
+					 "DISALLOW"
+				]
+		 }]
+		}
+	},
+	"Resources": {
+		"S3Bucket": {
+			"Type": "AWS::S3::Bucket",
+		    
+			"DeletionPolicy" : "Retain",
+			"Properties": {
+				"BucketName": {
+                    "Fn::If": [
+                        "ShouldNotCreateEnvResources",
+                        {
+                            "Ref": "bucketName"
+                        },
+                        {
+                            "Fn::Join": [
+                                "",
+                                [
+                                    {
+                                        "Ref": "bucketName"
+                                    },
+                                    {
+                                      "Fn::Select": [
+                                          3,
+                                          {
+                                              "Fn::Split": [
+                                                  "-",
+                                                  {
+                                                      "Ref": "AWS::StackName"
+                                                  }
+                                              ]
+                                          }
+                                      ]
+                                    },
+                                    "-",
+                                    {
+                                        "Ref": "env"
+                                    }
+                                ]
+                            ]
+                        }
+                    ]
+                },
+                
+				"CorsConfiguration": {
+					"CorsRules": [
+						{
+							"AllowedHeaders": [
+								"*"
+							],
+							"AllowedMethods": [
+								"GET",
+								"HEAD",
+								"PUT",
+								"POST",
+								"DELETE"
+							],
+							"AllowedOrigins": [
+								"*"
+							],
+							"ExposedHeaders": [
+								"x-amz-server-side-encryption",
+								"x-amz-request-id",
+								"x-amz-id-2",
+								"ETag"
+							],
+							"Id": "S3CORSRuleId1",
+							"MaxAge": "3000"
+						}
+					]
+				}
+			}
+		},
+      
+	    
+		"S3AuthPublicPolicy": {
+			"DependsOn": [
+				"S3Bucket"
+			],
+			"Condition": "CreateAuthPublic",
+			"Type": "AWS::IAM::Policy",
+			"Properties": {
+				"PolicyName": {
+					"Ref": "s3PublicPolicy"
+				},
+				"Roles": [
+					{
+						"Ref": "authRoleName"
+					}
+				],
+				"PolicyDocument": {
+					"Version": "2012-10-17",
+					"Statement": [
+						{
+							"Effect": "Allow",
+							"Action": {
+								"Fn::Split" : [ "," , {
+									"Ref": "s3PermissionsAuthenticatedPublic"
+								} ]
+							},
+							"Resource": [
+								{
+									"Fn::Join": [
+										"",
+										[
+											"arn:aws:s3:::",
+											{
+												"Ref": "S3Bucket"
+											},
+											"/public/*"
+										]
+									]
+								}
+							]
+						}
+					]
+				}
+			}
+		},
+		"S3AuthProtectedPolicy": {
+			"DependsOn": [
+				"S3Bucket"
+			],
+			"Condition": "CreateAuthProtected",
+			"Type": "AWS::IAM::Policy",
+			"Properties": {
+				"PolicyName": {
+					"Ref": "s3ProtectedPolicy"
+				},
+				"Roles": [
+					{
+						"Ref": "authRoleName"
+					}
+				],
+				"PolicyDocument": {
+					"Version": "2012-10-17",
+					"Statement": [
+						{
+							"Effect": "Allow",
+							"Action": {
+								"Fn::Split" : [ "," , {
+									"Ref": "s3PermissionsAuthenticatedProtected"
+								} ]
+							},
+							"Resource": [
+								{
+									"Fn::Join": [
+										"",
+										[
+											"arn:aws:s3:::",
+											{
+												"Ref": "S3Bucket"
+											},
+											"/protected/${cognito-identity.amazonaws.com:sub}/*"
+										]
+									]
+								}
+							]
+						}
+					]
+				}
+			}
+		},
+		"S3AuthPrivatePolicy": {
+			"DependsOn": [
+				"S3Bucket"
+			],
+			"Condition": "CreateAuthPrivate",
+			"Type": "AWS::IAM::Policy",
+			"Properties": {
+				"PolicyName": {
+					"Ref": "s3PrivatePolicy"
+				},
+				"Roles": [
+					{
+						"Ref": "authRoleName"
+					}
+				],
+				"PolicyDocument": {
+					"Version": "2012-10-17",
+					"Statement": [
+						{
+							"Effect": "Allow",
+							"Action": {
+								"Fn::Split" : [ "," , {
+									"Ref": "s3PermissionsAuthenticatedPrivate"
+								} ]
+							},
+							"Resource": [
+								{
+									"Fn::Join": [
+										"",
+										[
+											"arn:aws:s3:::",
+											{
+												"Ref": "S3Bucket"
+											},
+											"/private/${cognito-identity.amazonaws.com:sub}/*"
+										]
+									]
+								}
+							]
+						}
+					]
+				}
+			}
+		},
+		"S3AuthUploadPolicy": {
+			"DependsOn": [
+				"S3Bucket"
+			],
+			"Condition": "CreateAuthUploads",
+			"Type": "AWS::IAM::Policy",
+			"Properties": {
+				"PolicyName": {
+					"Ref": "s3UploadsPolicy"
+				},
+				"Roles": [
+					{
+						"Ref": "authRoleName"
+					}
+				],
+				"PolicyDocument": {
+					"Version": "2012-10-17",
+					"Statement": [
+						{
+							"Effect": "Allow",
+							"Action": {
+								"Fn::Split" : [ "," , {
+									"Ref": "s3PermissionsAuthenticatedUploads"
+								} ]
+							},
+							"Resource": [
+								{
+									"Fn::Join": [
+										"",
+										[
+											"arn:aws:s3:::",
+											{
+												"Ref": "S3Bucket"
+											},
+											"/uploads/*"
+										]
+									]
+								}
+							]
+						}
+					]
+				}
+			}
+		},
+		"S3AuthReadPolicy": {
+			"DependsOn": [
+				"S3Bucket"
+			],
+			"Condition": "AuthReadAndList",
+			"Type": "AWS::IAM::Policy",
+			"Properties": {
+				"PolicyName": {
+					"Ref": "s3ReadPolicy"
+				},
+				"Roles": [
+					{
+						"Ref": "authRoleName"
+					}
+				],
+				"PolicyDocument": {
+					"Version": "2012-10-17",
+					"Statement": [
+						{
+							"Effect": "Allow",
+							"Action": [
+								"s3:GetObject"
+							],
+							"Resource": [
+								{
+									"Fn::Join": [
+										"",
+										[
+											"arn:aws:s3:::",
+											{
+												"Ref": "S3Bucket"
+											},
+											"/protected/*"
+										]
+									]
+								}
+							]
+						},
+						{
+							"Effect": "Allow",
+							"Action": [
+								"s3:ListBucket"
+							],
+							"Resource": [
+								{
+									"Fn::Join": [
+										"",
+										[
+											"arn:aws:s3:::",
+											{
+												"Ref": "S3Bucket"
+											}
+										]
+									]
+								}
+							],
+							"Condition": {
+								"StringLike": {
+									"s3:prefix": [
+										"public/",
+										"public/*",
+										"protected/",
+										"protected/*",
+										"private/${cognito-identity.amazonaws.com:sub}/",
+										"private/${cognito-identity.amazonaws.com:sub}/*"
+									]
+								}
+							}
+						}
+					]
+				}
+			}
+		},
+		"S3GuestPublicPolicy": {
+			"DependsOn": [
+				"S3Bucket"
+			],
+			"Condition": "CreateGuestPublic",
+			"Type": "AWS::IAM::Policy",
+			"Properties": {
+				"PolicyName": {
+					"Ref": "s3PublicPolicy"
+				},
+				"Roles": [
+					{
+						"Ref": "unauthRoleName"
+					}
+				],
+				"PolicyDocument": {
+					"Version": "2012-10-17",
+					"Statement": [
+						{
+							"Effect": "Allow",
+							"Action": {
+								"Fn::Split" : [ "," , {
+									"Ref": "s3PermissionsGuestPublic"
+								} ]
+							},
+							"Resource": [
+								{
+									"Fn::Join": [
+										"",
+										[
+											"arn:aws:s3:::",
+											{
+												"Ref": "S3Bucket"
+											},
+											"/public/*"
+										]
+									]
+								}
+							]
+						}
+					]
+				}
+			}
+		},
+		"S3GuestUploadPolicy": {
+			"DependsOn": [
+				"S3Bucket"
+			],
+			"Condition": "CreateGuestUploads",
+			"Type": "AWS::IAM::Policy",
+			"Properties": {
+				"PolicyName": {
+					"Ref": "s3UploadsPolicy"
+				},
+				"Roles": [
+					{
+						"Ref": "unauthRoleName"
+					}
+				],
+				"PolicyDocument": {
+					"Version": "2012-10-17",
+					"Statement": [
+						{
+							"Effect": "Allow",
+							"Action": {
+								"Fn::Split" : [ "," , {
+									"Ref": "s3PermissionsGuestUploads"
+								} ]
+							},
+							"Resource": [
+								{
+									"Fn::Join": [
+										"",
+										[
+											"arn:aws:s3:::",
+											{
+												"Ref": "S3Bucket"
+											},
+											"/uploads/*"
+										]
+									]
+								}
+							]
+						}
+					]
+				}
+			}
+		},
+		"S3GuestReadPolicy": {
+			"DependsOn": [
+				"S3Bucket"
+			],
+			"Condition": "GuestReadAndList",
+			"Type": "AWS::IAM::Policy",
+			"Properties": {
+				"PolicyName": {
+					"Ref": "s3ReadPolicy"
+				},
+				"Roles": [
+					{
+						"Ref": "unauthRoleName"
+					}
+				],
+				"PolicyDocument": {
+					"Version": "2012-10-17",
+					"Statement": [
+						{
+							"Effect": "Allow",
+							"Action": [
+								"s3:GetObject"
+							],
+							"Resource": [
+								{
+									"Fn::Join": [
+										"",
+										[
+											"arn:aws:s3:::",
+											{
+												"Ref": "S3Bucket"
+											},
+											"/protected/*"
+										]
+									]
+								}
+							]
+						},
+						{
+							"Effect": "Allow",
+							"Action": [
+								"s3:ListBucket"
+							],
+							"Resource": [
+								{
+									"Fn::Join": [
+										"",
+										[
+											"arn:aws:s3:::",
+											{
+												"Ref": "S3Bucket"
+											}
+										]
+									]
+								}
+							],
+							"Condition": {
+								"StringLike": {
+									"s3:prefix": [
+										"public/",
+										"public/*",
+										"protected/",
+										"protected/*"
+									]
+								}
+							}
+						}
+					]
+				}
+			}
+		}
+	},
+	"Outputs": {
+		"BucketName": {
+			"Value": {
+				"Ref": "S3Bucket"
+			},
+			"Description": "Bucket name for the S3 bucket"
+		},
+		"Region": {
+			"Value": {
+				"Ref": "AWS::Region"
+			}
+		}
+	}
+}
Index: amplify/backend/storage/AyaStorage/parameters.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- amplify/backend/storage/AyaStorage/parameters.json	(date 1622729973120)
+++ amplify/backend/storage/AyaStorage/parameters.json	(date 1622729973120)
@@ -0,0 +1,35 @@
+{
+    "bucketName": "ayataskmasterca65620380434326b164088a24c2042e",
+    "authPolicyName": "s3_amplify_70b6d7ac",
+    "unauthPolicyName": "s3_amplify_70b6d7ac",
+    "authRoleName": {
+        "Ref": "AuthRoleName"
+    },
+    "unauthRoleName": {
+        "Ref": "UnauthRoleName"
+    },
+    "selectedGuestPermissions": [
+        "s3:GetObject",
+        "s3:ListBucket"
+    ],
+    "selectedAuthenticatedPermissions": [
+        "s3:PutObject",
+        "s3:GetObject",
+        "s3:ListBucket",
+        "s3:DeleteObject"
+    ],
+    "s3PermissionsAuthenticatedPublic": "s3:PutObject,s3:GetObject,s3:DeleteObject",
+    "s3PublicPolicy": "Public_policy_aa19a611",
+    "s3PermissionsAuthenticatedUploads": "s3:PutObject",
+    "s3UploadsPolicy": "Uploads_policy_aa19a611",
+    "s3PermissionsAuthenticatedProtected": "s3:PutObject,s3:GetObject,s3:DeleteObject",
+    "s3ProtectedPolicy": "Protected_policy_aa19a611",
+    "s3PermissionsAuthenticatedPrivate": "s3:PutObject,s3:GetObject,s3:DeleteObject",
+    "s3PrivatePolicy": "Private_policy_aa19a611",
+    "AuthenticatedAllowList": "ALLOW",
+    "s3ReadPolicy": "read_policy_aa19a611",
+    "s3PermissionsGuestPublic": "DISALLOW",
+    "s3PermissionsGuestUploads": "DISALLOW",
+    "GuestAllowList": "DISALLOW",
+    "triggerFunction": "NONE"
+}
\ No newline at end of file
Index: amplify/backend/storage/AyaStorage/storage-params.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- amplify/backend/storage/AyaStorage/storage-params.json	(date 1622729973122)
+++ amplify/backend/storage/AyaStorage/storage-params.json	(date 1622729973122)
@@ -0,0 +1,1 @@
+{}
\ No newline at end of file
Index: app/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>plugins {\r\n    id 'com.android.application'\r\n}\r\n\r\nandroid {\r\n    compileSdkVersion 29\r\n    buildToolsVersion \"30.0.3\"\r\n\r\n    defaultConfig {\r\n        applicationId \"com.example.taskmaster\"\r\n        minSdkVersion 16\r\n        targetSdkVersion 29\r\n        versionCode 1\r\n        versionName \"1.0\"\r\n        multiDexEnabled true\r\n\r\n\r\n        testInstrumentationRunner \"androidx.test.runner.AndroidJUnitRunner\"\r\n    }\r\n\r\n    buildTypes {\r\n        release {\r\n            minifyEnabled false\r\n            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'\r\n        }\r\n    }\r\n    compileOptions {\r\n        sourceCompatibility = 1.8\r\n        targetCompatibility = 1.8\r\n    }\r\n\r\n}\r\n\r\ndependencies {\r\n    implementation fileTree(dir: 'libs', include: ['*.jar'])\r\n\r\n    implementation 'androidx.appcompat:appcompat:1.2.0'\r\n    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'\r\n    implementation 'com.google.android.material:material:1.3.0'\r\n    implementation 'androidx.annotation:annotation:1.1.0'\r\n    implementation 'androidx.lifecycle:lifecycle-extensions:2.0.0'\r\n    testImplementation 'junit:junit:4.12'\r\n    androidTestImplementation 'androidx.test.ext:junit:1.1.2'\r\n    implementation 'androidx.legacy:legacy-support-v4:1.0.0'\r\n    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'\r\n\r\n    def room_version = \"2.3.0\"\r\n\r\n    implementation \"androidx.room:room-runtime:$room_version\"\r\n    annotationProcessor \"androidx.room:room-compiler:$room_version\"\r\n\r\n    // optional - RxJava2 support for Room\r\n    implementation \"androidx.room:room-rxjava2:$room_version\"\r\n\r\n    // optional - RxJava3 support for Room\r\n    implementation \"androidx.room:room-rxjava3:$room_version\"\r\n\r\n    // optional - Guava support for Room, including Optional and ListenableFuture\r\n    implementation \"androidx.room:room-guava:$room_version\"\r\n\r\n    // optional - Test helpers\r\n    testImplementation \"androidx.room:room-testing:$room_version\"\r\n\r\n    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.0'\r\n    androidTestImplementation 'androidx.test:runner:1.1.0'\r\n    androidTestImplementation 'androidx.test:rules:1.1.0'\r\n\r\n    implementation 'com.amplifyframework:aws-api:1.17.4'\r\n    implementation 'com.amplifyframework:aws-datastore:1.17.4'\r\n\r\n    // AndroidJUnitRunner and JUnit Rules\r\n    androidTestImplementation 'androidx.test:runner:1.1.0'\r\n    androidTestImplementation 'androidx.test:rules:1.1.0'\r\n\r\n    // Assertions\r\n    androidTestImplementation 'androidx.test.ext:junit:1.0.0'\r\n    androidTestImplementation 'androidx.test.ext:truth:1.0.0'\r\n    androidTestImplementation 'com.google.truth:truth:0.42'\r\n\r\n    // Espresso dependencies\r\n    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.0'\r\n    androidTestImplementation 'androidx.test.espresso:espresso-contrib:3.1.0'\r\n    androidTestImplementation 'androidx.test.espresso:espresso-intents:3.1.0'\r\n    androidTestImplementation 'androidx.test.espresso:espresso-accessibility:3.1.0'\r\n    androidTestImplementation 'androidx.test.espresso:espresso-web:3.1.0'\r\n    androidTestImplementation 'androidx.test.espresso.idling:idling-concurrent:3.1.0'\r\n\r\n    // The following Espresso dependency can be either \"implementation\"\r\n    // or \"androidTestImplementation\", depending on whether you want the\r\n    // dependency to appear on your APK's compile classpath or the test APK\r\n    // classpath.\r\n    androidTestImplementation 'androidx.test.espresso:espresso-idling-resource:3.1.0'\r\n    androidTestImplementation 'androidx.test.espresso:espresso-intents:3.1.0'\r\n\r\n    implementation 'com.amplifyframework:aws-api:1.17.4'\r\n    implementation 'com.amplifyframework:aws-datastore:1.17.4'\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/build.gradle	(revision 3dbe1fa09618ad89b139365c356d1672d80f1dc1)
+++ app/build.gradle	(date 1623140231426)
@@ -94,4 +94,17 @@
 
     implementation 'com.amplifyframework:aws-api:1.17.4'
     implementation 'com.amplifyframework:aws-datastore:1.17.4'
+    implementation 'androidx.multidex:multidex:2.0.1'
+
+    implementation 'com.amplifyframework:core:1.17.4'
+    implementation 'com.amplifyframework:aws-auth-cognito:1.17.4'
+
+
+    implementation 'com.amplifyframework:aws-storage-s3:1.17.4'
+    implementation 'com.amplifyframework:aws-auth-cognito:1.17.4'
+
+    implementation platform('com.google.firebase:firebase-bom:28.1.0')
+    implementation 'com.google.firebase:firebase-analytics'
+    implementation 'com.google.firebase:firebase-messaging'
+    
 }
\ No newline at end of file
Index: amplify/team-provider-info.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- amplify/team-provider-info.json	(date 1622729384426)
+++ amplify/team-provider-info.json	(date 1622729384426)
@@ -0,0 +1,20 @@
+{
+  "staging": {
+    "awscloudformation": {
+      "AuthRoleName": "amplify-ayataskmaster-staging-130038-authRole",
+      "UnauthRoleArn": "arn:aws:iam::301210120197:role/amplify-ayataskmaster-staging-130038-unauthRole",
+      "AuthRoleArn": "arn:aws:iam::301210120197:role/amplify-ayataskmaster-staging-130038-authRole",
+      "Region": "us-east-1",
+      "DeploymentBucketName": "amplify-ayataskmaster-staging-130038-deployment",
+      "UnauthRoleName": "amplify-ayataskmaster-staging-130038-unauthRole",
+      "StackName": "amplify-ayataskmaster-staging-130038",
+      "StackId": "arn:aws:cloudformation:us-east-1:301210120197:stack/amplify-ayataskmaster-staging-130038/b1b0f080-c46b-11eb-a2eb-0ef585e93a5f",
+      "AmplifyAppId": "dt6pccyo6l9v8"
+    },
+    "categories": {
+      "auth": {
+        "ayataskmaster2f74638c": {}
+      }
+    }
+  }
+}
\ No newline at end of file
Index: amplify/backend/api/ayataskmaster/parameters.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- amplify/backend/api/ayataskmaster/parameters.json	(date 1622729872641)
+++ amplify/backend/api/ayataskmaster/parameters.json	(date 1622729872641)
@@ -0,0 +1,5 @@
+{
+  "AppSyncApiName": "ayataskmaster",
+  "DynamoDBBillingMode": "PAY_PER_REQUEST",
+  "DynamoDBEnableServerSideEncryption": false
+}
\ No newline at end of file
Index: app/src/main/res/raw/awsconfiguration.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>{}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/raw/awsconfiguration.json	(revision 3dbe1fa09618ad89b139365c356d1672d80f1dc1)
+++ app/src/main/res/raw/awsconfiguration.json	(date 1622729088360)
@@ -1,1 +1,7 @@
-{}
\ No newline at end of file
+{
+    "UserAgent": "aws-amplify-cli/0.1.0",
+    "Version": "0.1.0",
+    "IdentityManager": {
+        "Default": {}
+    }
+}
\ No newline at end of file
Index: amplify/backend/api/ayataskmaster/schema.graphql
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- amplify/backend/api/ayataskmaster/schema.graphql	(date 1622729847294)
+++ amplify/backend/api/ayataskmaster/schema.graphql	(date 1622729847294)
@@ -0,0 +1,5 @@
+type Todo @model {
+  id: ID!
+  name: String!
+  description: String
+}
Index: app/src/main/java/com/example/taskmaster/SignUp.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/taskmaster/SignUp.java	(date 1623140923736)
+++ app/src/main/java/com/example/taskmaster/SignUp.java	(date 1623140923736)
@@ -0,0 +1,45 @@
+package com.example.taskmaster;
+
+import androidx.appcompat.app.AppCompatActivity;
+
+import android.os.Bundle;
+import android.util.Log;
+import android.view.View;
+import android.widget.Button;
+import android.widget.EditText;
+
+import com.amplifyframework.auth.AuthUserAttributeKey;
+import com.amplifyframework.auth.options.AuthSignUpOptions;
+import com.amplifyframework.core.Amplify;
+
+public class SignUp extends AppCompatActivity {
+
+    EditText username, email, password;
+    Button signUp;
+
+    @Override
+    protected void onCreate(Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+        setContentView(R.layout.activity_sign_up);
+
+
+        username = findViewById(R.id.userName);
+        email = findViewById(R.id.email);
+        password = findViewById(R.id.password);
+        signUp = findViewById(R.id.signUp);
+
+    }
+
+    public void signUp(View view) {
+
+        AuthSignUpOptions options = AuthSignUpOptions.builder()
+                .userAttribute(AuthUserAttributeKey.email(), "my@email.com")
+                .build();
+        Amplify.Auth.signUp("username", "Password123", options,
+                result -> Log.i("AuthQuickStart", "Result: " + result.toString()),
+                error -> Log.e("AuthQuickStart", "Sign up failed", error)
+        );
+
+
+    }
+}
\ No newline at end of file
Index: app/src/main/res/raw/amplifyconfiguration.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>{}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/raw/amplifyconfiguration.json	(revision 3dbe1fa09618ad89b139365c356d1672d80f1dc1)
+++ app/src/main/res/raw/amplifyconfiguration.json	(date 1622729088357)
@@ -1,1 +1,4 @@
-{}
\ No newline at end of file
+{
+    "UserAgent": "aws-amplify-cli/2.0",
+    "Version": "1.0"
+}
\ No newline at end of file
Index: app/src/main/res/layout/activity_sign_up.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/activity_sign_up.xml	(date 1623080984996)
+++ app/src/main/res/layout/activity_sign_up.xml	(date 1623080984996)
@@ -0,0 +1,76 @@
+<?xml version="1.0" encoding="utf-8"?>
+<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    tools:context=".SignUp">
+
+
+    <TextView
+        android:id="@+id/textView11"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_marginTop="150dp"
+        android:text="Sign Up"
+        android:textColor="#F44336"
+        android:textSize="35sp"
+        android:textStyle="bold"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintHorizontal_bias="0.5"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toTopOf="parent" />
+
+    <EditText
+        android:id="@+id/userName"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_marginTop="220dp"
+        android:ems="10"
+        android:hint="Username"
+        android:inputType="textPersonName"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toTopOf="parent" />
+
+    <EditText
+        android:id="@+id/email"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_marginTop="16dp"
+        android:ems="10"
+        android:hint="Email"
+        android:inputType="textEmailAddress"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintHorizontal_bias="0.5"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toBottomOf="@+id/password" />
+
+
+    <EditText
+        android:id="@+id/password"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_marginTop="16dp"
+        android:ems="10"
+        android:hint="Password"
+        android:inputType="textPassword"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toBottomOf="@+id/userNameInput" />
+
+    <Button
+        android:id="@+id/signUp"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_marginTop="16dp"
+        android:text="Sign Up"
+        app:backgroundTint="#F44336"
+        android:onClick="signUp"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintHorizontal_bias="0.5"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toBottomOf="@+id/email"
+        />
+
+</androidx.constraintlayout.widget.ConstraintLayout>
\ No newline at end of file
Index: amplify/backend/api/ayataskmaster/transform.conf.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- amplify/backend/api/ayataskmaster/transform.conf.json	(date 1623140233626)
+++ amplify/backend/api/ayataskmaster/transform.conf.json	(date 1623140233626)
@@ -0,0 +1,10 @@
+{
+    "Version": 5,
+    "ElasticsearchWarning": true,
+    "ResolverConfig": {
+        "project": {
+            "ConflictHandler": "AUTOMERGE",
+            "ConflictDetection": "VERSION"
+        }
+    }
+}
\ No newline at end of file
Index: amplify/backend/tags.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- amplify/backend/tags.json	(date 1622729086810)
+++ amplify/backend/tags.json	(date 1622729086810)
@@ -0,0 +1,10 @@
+[
+  {
+    "Key": "user:Stack",
+    "Value": "{project-env}"
+  },
+  {
+    "Key": "user:Application",
+    "Value": "{project-name}"
+  }
+]
\ No newline at end of file
Index: app/src/main/java/com/example/taskmaster/confirmSignUp.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/taskmaster/confirmSignUp.java	(date 1623081724580)
+++ app/src/main/java/com/example/taskmaster/confirmSignUp.java	(date 1623081724580)
@@ -0,0 +1,28 @@
+package com.example.taskmaster;
+
+import androidx.appcompat.app.AppCompatActivity;
+
+import android.os.Bundle;
+import android.util.Log;
+import android.view.View;
+
+import com.amplifyframework.core.Amplify;
+
+public class confirmSignUp extends AppCompatActivity {
+
+    @Override
+    protected void onCreate(Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+        setContentView(R.layout.activity_confirm_sign_up);
+    }
+
+    public void confirmEmail(View view) {
+
+        Amplify.Auth.confirmSignUp(
+                "username",
+                "the code you received via email",
+                result -> Log.i("AuthQuickstart", result.isSignUpComplete() ? "Confirm signUp succeeded" : "Confirm sign up not complete"),
+                error -> Log.e("AuthQuickstart", error.toString())
+        );
+    }
+}
\ No newline at end of file
Index: amplify/.config/project-config.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>{\r\n  \"projectName\": \"TaskMaster\",\r\n  \"version\": \"2.0\",\r\n  \"frontend\": \"android\",\r\n  \"providers\": [\r\n    \"awscloudformation\"\r\n  ],\r\n  \"android\": {\r\n    \"config\": {\r\n      \"ResDir\": \"app/src/main/res\"\r\n    }\r\n  }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- amplify/.config/project-config.json	(revision 3dbe1fa09618ad89b139365c356d1672d80f1dc1)
+++ amplify/.config/project-config.json	(date 1622729007707)
@@ -1,10 +1,10 @@
 {
-  "projectName": "TaskMaster",
-  "version": "2.0",
-  "frontend": "android",
   "providers": [
     "awscloudformation"
   ],
+  "projectName": "ayataskmaster",
+  "version": "3.1",
+  "frontend": "android",
   "android": {
     "config": {
       "ResDir": "app/src/main/res"
Index: app/src/main/res/layout/activity_confirm_sign_up.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/activity_confirm_sign_up.xml	(date 1623081701457)
+++ app/src/main/res/layout/activity_confirm_sign_up.xml	(date 1623081701457)
@@ -0,0 +1,34 @@
+<?xml version="1.0" encoding="utf-8"?>
+<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    tools:context=".confirmSignUp">
+
+    <EditText
+        android:id="@+id/code"
+        android:layout_width="250dp"
+        android:layout_height="wrap_content"
+        android:layout_marginTop="50dp"
+        android:hint="code"
+        android:inputType="textPersonName"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintHorizontal_bias="0.5"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toTopOf="parent" />
+
+    <Button
+        android:id="@+id/confirmEmail"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_marginTop="16dp"
+        android:text="confirm"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintHorizontal_bias="0.5"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toBottomOf="@+id/code"
+        android:onClick="confirmEmail"/>
+
+
+</androidx.constraintlayout.widget.ConstraintLayout>
\ No newline at end of file
Index: app/src/main/AndroidManifest.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    package=\"com.example.taskmaster\">\r\n\r\n  <application\r\n      android:allowBackup=\"true\"\r\n      android:icon=\"@mipmap/ic_launcher\"\r\n      android:label=\"@string/app_name\"\r\n      android:roundIcon=\"@mipmap/ic_launcher_round\"\r\n      android:supportsRtl=\"true\"\r\n      android:theme=\"@style/AppTheme\">\r\n    <activity android:name=\".Details\"></activity>\r\n    <activity\r\n        android:name=\".ui.login.Details\"\r\n        android:label=\"@string/title_activity_details\" />\r\n    <activity android:name=\".UserSetting\" />\r\n    <activity android:name=\".alltasks\" />\r\n    <activity android:name=\".AddTask\" />\r\n    <activity android:name=\".MainActivity\">\r\n      <intent-filter>\r\n        <action android:name=\"android.intent.action.MAIN\" />\r\n\r\n        <category android:name=\"android.intent.category.LAUNCHER\" />\r\n      </intent-filter>\r\n    </activity>\r\n  </application>\r\n\r\n</manifest>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/AndroidManifest.xml	(revision 3dbe1fa09618ad89b139365c356d1672d80f1dc1)
+++ app/src/main/AndroidManifest.xml	(date 1623081155905)
@@ -2,27 +2,39 @@
 <manifest xmlns:android="http://schemas.android.com/apk/res/android"
     package="com.example.taskmaster">
 
-  <application
-      android:allowBackup="true"
-      android:icon="@mipmap/ic_launcher"
-      android:label="@string/app_name"
-      android:roundIcon="@mipmap/ic_launcher_round"
-      android:supportsRtl="true"
-      android:theme="@style/AppTheme">
-    <activity android:name=".Details"></activity>
-    <activity
-        android:name=".ui.login.Details"
-        android:label="@string/title_activity_details" />
-    <activity android:name=".UserSetting" />
-    <activity android:name=".alltasks" />
-    <activity android:name=".AddTask" />
-    <activity android:name=".MainActivity">
-      <intent-filter>
-        <action android:name="android.intent.action.MAIN" />
+    <application
+        android:allowBackup="true"
+        android:icon="@mipmap/ic_launcher"
+        android:label="@string/app_name"
+        android:roundIcon="@mipmap/ic_launcher_round"
+        android:supportsRtl="true"
+        android:theme="@style/AppTheme">
+        <activity android:name=".confirmSignUp"></activity>
+        <activity android:name=".SignUp" />
+        <activity android:name=".Details" />
+        <activity
+            android:name=".ui.login.Details"
+            android:label="@string/title_activity_details" />
+        <activity android:name=".UserSetting" />
+        <activity android:name=".alltasks" />
+        <activity android:name=".AddTask" />
+        <activity android:name=".MainActivity">
+            <intent-filter>
+                <action android:name="android.intent.action.MAIN" />
 
-        <category android:name="android.intent.category.LAUNCHER" />
-      </intent-filter>
-    </activity>
-  </application>
+                <category android:name="android.intent.category.LAUNCHER" />
+            </intent-filter>
+        </activity>
+        <activity android:name="com.amazonaws.mobileconnectors.cognitoauth.activities.CustomTabsRedirectActivity">
+            <intent-filter>
+                <action android:name="android.intent.action.VIEW" />
+
+                <category android:name="android.intent.category.DEFAULT" />
+                <category android:name="android.intent.category.BROWSABLE" />
+
+                <data android:scheme="myapp" />
+            </intent-filter>
+        </activity>
+    </application>
 
 </manifest>
\ No newline at end of file
Index: amplify/backend/backend-config.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>{\r\n  \"api\": {\r\n    \"amplifyDatasource\": {\r\n      \"service\": \"AppSync\",\r\n      \"providerPlugin\": \"awscloudformation\",\r\n      \"output\": {\r\n        \"authConfig\": {\r\n          \"additionalAuthenticationProviders\": [],\r\n          \"defaultAuthentication\": {\r\n            \"authenticationType\": \"API_KEY\",\r\n            \"apiKeyConfig\": {\r\n              \"description\": \"\",\r\n              \"apiKeyExpirationDays\": 7\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- amplify/backend/backend-config.json	(revision 3dbe1fa09618ad89b139365c356d1672d80f1dc1)
+++ amplify/backend/backend-config.json	(date 1622729973143)
@@ -1,20 +1,34 @@
 {
+  "auth": {
+    "ayataskmaster2f74638c": {
+      "service": "Cognito",
+      "providerPlugin": "awscloudformation",
+      "dependsOn": [],
+      "customAuth": false
+    }
+  },
   "api": {
-    "amplifyDatasource": {
+    "ayataskmaster": {
       "service": "AppSync",
       "providerPlugin": "awscloudformation",
       "output": {
         "authConfig": {
-          "additionalAuthenticationProviders": [],
           "defaultAuthentication": {
             "authenticationType": "API_KEY",
             "apiKeyConfig": {
-              "description": "",
-              "apiKeyExpirationDays": 7
+              "apiKeyExpirationDays": 365,
+              "description": "ayaTaskMasterGraph"
             }
-          }
+          },
+          "additionalAuthenticationProviders": []
         }
       }
     }
-  }
-}
+  },
+  "storage": {
+    "AyaStorage": {
+      "service": "S3",
+      "providerPlugin": "awscloudformation"
+    }
+  }
+}
\ No newline at end of file
Index: amplify/backend/api/ayataskmaster/resolvers/README.md
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- amplify/backend/api/ayataskmaster/resolvers/README.md	(date 499162500000)
+++ amplify/backend/api/ayataskmaster/resolvers/README.md	(date 499162500000)
@@ -0,0 +1,2 @@
+Any resolvers that you add in this directory will override the ones automatically generated by Amplify CLI and will be directly copied to the cloud. 
+For more information, visit [https://docs.amplify.aws/cli/graphql-transformer/resolvers](https://docs.amplify.aws/cli/graphql-transformer/resolvers)
\ No newline at end of file
Index: amplify/backend/api/ayataskmaster/stacks/CustomResources.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- amplify/backend/api/ayataskmaster/stacks/CustomResources.json	(date 499162500000)
+++ amplify/backend/api/ayataskmaster/stacks/CustomResources.json	(date 499162500000)
@@ -0,0 +1,58 @@
+{
+  "AWSTemplateFormatVersion": "2010-09-09",
+  "Description": "An auto-generated nested stack.",
+  "Metadata": {},
+  "Parameters": {
+    "AppSyncApiId": {
+      "Type": "String",
+      "Description": "The id of the AppSync API associated with this project."
+    },
+    "AppSyncApiName": {
+      "Type": "String",
+      "Description": "The name of the AppSync API",
+      "Default": "AppSyncSimpleTransform"
+    },
+    "env": {
+      "Type": "String",
+      "Description": "The environment name. e.g. Dev, Test, or Production",
+      "Default": "NONE"
+    },
+    "S3DeploymentBucket": {
+      "Type": "String",
+      "Description": "The S3 bucket containing all deployment assets for the project."
+    },
+    "S3DeploymentRootKey": {
+      "Type": "String",
+      "Description": "An S3 key relative to the S3DeploymentBucket that points to the root\nof the deployment directory."
+    }
+  },
+  "Resources": {
+    "EmptyResource": {
+      "Type": "Custom::EmptyResource",
+      "Condition": "AlwaysFalse"
+    }
+  },
+  "Conditions": {
+    "HasEnvironmentParameter": {
+      "Fn::Not": [
+        {
+          "Fn::Equals": [
+            {
+              "Ref": "env"
+            },
+            "NONE"
+          ]
+        }
+      ]
+    },
+    "AlwaysFalse": {
+      "Fn::Equals": ["true", "false"]
+    }
+  },
+  "Outputs": {
+    "EmptyOutput": {
+      "Description": "An empty output. You may delete this if you have at least one resource above.",
+      "Value": ""
+    }
+  }
+}
Index: amplify/backend/auth/ayataskmaster2f74638c/parameters.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- amplify/backend/auth/ayataskmaster2f74638c/parameters.json	(date 1622729384368)
+++ amplify/backend/auth/ayataskmaster2f74638c/parameters.json	(date 1622729384368)
@@ -0,0 +1,66 @@
+{
+    "identityPoolName": "ayataskmaster2f74638c_identitypool_2f74638c",
+    "allowUnauthenticatedIdentities": false,
+    "resourceNameTruncated": "ayatas2f74638c",
+    "userPoolName": "ayataskmaster2f74638c_userpool_2f74638c",
+    "autoVerifiedAttributes": [
+        "email"
+    ],
+    "mfaConfiguration": "OFF",
+    "mfaTypes": [
+        "SMS Text Message"
+    ],
+    "smsAuthenticationMessage": "Your authentication code is {####}",
+    "smsVerificationMessage": "Your verification code is {####}",
+    "emailVerificationSubject": "Your verification code",
+    "emailVerificationMessage": "Your verification code is {####}",
+    "defaultPasswordPolicy": false,
+    "passwordPolicyMinLength": 8,
+    "passwordPolicyCharacters": [],
+    "requiredAttributes": [
+        "email",
+        "family_name",
+        "name"
+    ],
+    "userpoolClientGenerateSecret": false,
+    "userpoolClientRefreshTokenValidity": 30,
+    "userpoolClientWriteAttributes": [
+        "email"
+    ],
+    "userpoolClientReadAttributes": [
+        "email"
+    ],
+    "userpoolClientLambdaRole": "ayatas2f74638c_userpoolclient_lambda_role",
+    "userpoolClientSetAttributes": false,
+    "sharedId": "2f74638c",
+    "resourceName": "ayataskmaster2f74638c",
+    "authSelections": "identityPoolAndUserPool",
+    "authRoleArn": {
+        "Fn::GetAtt": [
+            "AuthRole",
+            "Arn"
+        ]
+    },
+    "unauthRoleArn": {
+        "Fn::GetAtt": [
+            "UnauthRole",
+            "Arn"
+        ]
+    },
+    "useDefault": "defaultSocial",
+    "hostedUI": true,
+    "triggers": "{}",
+    "hostedUIDomainName": "ayataskmaster2f74638c-2f74638c",
+    "authProvidersUserPool": [],
+    "hostedUIProviderMeta": "[]",
+    "oAuthMetadata": "{\"AllowedOAuthFlows\":[\"code\"],\"AllowedOAuthScopes\":[\"phone\",\"email\",\"openid\",\"profile\",\"aws.cognito.signin.user.admin\"],\"CallbackURLs\":[\"myapp://callback/\"],\"LogoutURLs\":[\"myapp://signout/\"]}",
+    "userPoolGroupList": [],
+    "serviceName": "Cognito",
+    "usernameCaseSensitive": false,
+    "parentStack": {
+        "Ref": "AWS::StackId"
+    },
+    "breakCircularDependency": true,
+    "permissions": [],
+    "dependsOn": []
+}
\ No newline at end of file
Index: amplify/backend/auth/ayataskmaster2f74638c/ayataskmaster2f74638c-cloudformation-template.yml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- amplify/backend/auth/ayataskmaster2f74638c/ayataskmaster2f74638c-cloudformation-template.yml	(date 1622729361891)
+++ amplify/backend/auth/ayataskmaster2f74638c/ayataskmaster2f74638c-cloudformation-template.yml	(date 1622729361891)
@@ -0,0 +1,823 @@
+AWSTemplateFormatVersion: 2010-09-09
+
+Parameters:
+  env:
+    Type: String
+  authRoleArn:
+    Type: String
+  unauthRoleArn:
+    Type: String
+
+  
+
+    
+  identityPoolName:
+    Type: String
+  
+            
+  
+  allowUnauthenticatedIdentities:
+    Type: String
+            
+  resourceNameTruncated:
+    Type: String
+  
+            
+  userPoolName:
+    Type: String
+  
+            
+        
+  autoVerifiedAttributes:
+    Type: CommaDelimitedList
+      
+  mfaConfiguration:
+    Type: String
+  
+            
+        
+  mfaTypes:
+    Type: CommaDelimitedList
+      
+  smsAuthenticationMessage:
+    Type: String
+  
+            
+  smsVerificationMessage:
+    Type: String
+  
+            
+  emailVerificationSubject:
+    Type: String
+  
+            
+  emailVerificationMessage:
+    Type: String
+  
+            
+  
+  defaultPasswordPolicy:
+    Type: String
+            
+    
+  passwordPolicyMinLength:
+    Type: Number
+          
+        
+  passwordPolicyCharacters:
+    Type: CommaDelimitedList
+      
+        
+  requiredAttributes:
+    Type: CommaDelimitedList
+      
+  
+  userpoolClientGenerateSecret:
+    Type: String
+            
+    
+  userpoolClientRefreshTokenValidity:
+    Type: Number
+          
+        
+  userpoolClientWriteAttributes:
+    Type: CommaDelimitedList
+      
+        
+  userpoolClientReadAttributes:
+    Type: CommaDelimitedList
+      
+  userpoolClientLambdaRole:
+    Type: String
+  
+            
+  
+  userpoolClientSetAttributes:
+    Type: String
+            
+  sharedId:
+    Type: String
+  
+            
+  resourceName:
+    Type: String
+  
+            
+  authSelections:
+    Type: String
+  
+            
+            
+            
+  useDefault:
+    Type: String
+  
+            
+  
+  hostedUI:
+    Type: String
+            
+  triggers:
+    Type: String
+  
+            
+  hostedUIDomainName:
+    Type: String
+  
+            
+        
+  authProvidersUserPool:
+    Type: CommaDelimitedList
+      
+  hostedUIProviderMeta:
+    Type: String
+  
+            
+  hostedUIProviderCreds:
+    Type: String
+  
+            
+  oAuthMetadata:
+    Type: String
+  
+            
+        
+  userPoolGroupList:
+    Type: CommaDelimitedList
+      
+            
+  serviceName:
+    Type: String
+  
+            
+  
+  usernameCaseSensitive:
+    Type: String
+            
+      
+  parentStack:
+    Type: String
+        
+  
+  breakCircularDependency:
+    Type: String
+            
+        
+  permissions:
+    Type: CommaDelimitedList
+      
+        
+  dependsOn:
+    Type: CommaDelimitedList
+      
+Conditions:
+  ShouldNotCreateEnvResources: !Equals [ !Ref env, NONE ]
+  
+  ShouldOutputAppClientSecrets: !Equals [!Ref userpoolClientGenerateSecret, true ]
+  
+
+Resources:
+  
+  
+  # BEGIN SNS ROLE RESOURCE
+  SNSRole:
+  # Created to allow the UserPool SMS Config to publish via the Simple Notification Service during MFA Process
+    Type: AWS::IAM::Role
+    Properties:
+      RoleName: !If [ShouldNotCreateEnvResources, 'ayatas2f74638c_sns-role', !Join ['',[ 'sns', '2f74638c', !Select [3, !Split ['-', !Ref 'AWS::StackName']], '-', !Ref env]]]
+      AssumeRolePolicyDocument:
+        Version: "2012-10-17"
+        Statement:
+          - Sid: ""
+            Effect: "Allow"
+            Principal:
+              Service: "cognito-idp.amazonaws.com"
+            Action:
+              - "sts:AssumeRole"
+            Condition:
+              StringEquals:
+                sts:ExternalId: ayatas2f74638c_role_external_id
+      Policies:
+        -
+          PolicyName: ayatas2f74638c-sns-policy
+          PolicyDocument:
+            Version: "2012-10-17"
+            Statement:
+              -
+                Effect: "Allow"
+                Action:
+                  - "sns:Publish"
+                Resource: "*"
+  # BEGIN USER POOL RESOURCES
+  UserPool:
+  # Created upon user selection
+  # Depends on SNS Role for Arn if MFA is enabled
+    Type: AWS::Cognito::UserPool
+    UpdateReplacePolicy: Retain
+    Properties:
+      UserPoolName: !If [ShouldNotCreateEnvResources, !Ref userPoolName, !Join ['',[!Ref userPoolName, '-', !Ref env]]]
+      
+      
+      UsernameConfiguration:
+        CaseSensitive: false
+      
+      Schema:
+        
+        -
+          Name: email
+          Required: true
+          Mutable: true
+        
+        -
+          Name: family_name
+          Required: true
+          Mutable: true
+        
+        -
+          Name: name
+          Required: true
+          Mutable: true
+        
+      
+      
+      
+      AutoVerifiedAttributes: !Ref autoVerifiedAttributes
+      
+      
+      EmailVerificationMessage: !Ref emailVerificationMessage
+      EmailVerificationSubject: !Ref emailVerificationSubject
+      
+      Policies:
+        PasswordPolicy:
+          MinimumLength: !Ref passwordPolicyMinLength
+          RequireLowercase: false
+          RequireNumbers: false
+          RequireSymbols: false
+          RequireUppercase: false
+      
+      MfaConfiguration: !Ref mfaConfiguration
+      SmsVerificationMessage: !Ref smsVerificationMessage
+      SmsAuthenticationMessage: !Ref smsAuthenticationMessage
+      SmsConfiguration:
+        SnsCallerArn: !GetAtt SNSRole.Arn
+        ExternalId: ayatas2f74638c_role_external_id
+    
+  
+  UserPoolClientWeb:
+  # Created provide application access to user pool
+  # Depends on UserPool for ID reference
+    Type: "AWS::Cognito::UserPoolClient"
+    Properties:
+      ClientName: ayatas2f74638c_app_clientWeb
+      
+      RefreshTokenValidity: !Ref userpoolClientRefreshTokenValidity
+      UserPoolId: !Ref UserPool
+    DependsOn: UserPool
+  UserPoolClient:
+  # Created provide application access to user pool
+  # Depends on UserPool for ID reference
+    Type: "AWS::Cognito::UserPoolClient"
+    Properties:
+      ClientName: ayatas2f74638c_app_client
+      
+      GenerateSecret: !Ref userpoolClientGenerateSecret
+      RefreshTokenValidity: !Ref userpoolClientRefreshTokenValidity
+      UserPoolId: !Ref UserPool
+    DependsOn: UserPool
+  # BEGIN USER POOL LAMBDA RESOURCES
+  UserPoolClientRole:
+  # Created to execute Lambda which gets userpool app client config values
+    Type: 'AWS::IAM::Role'
+    Properties:
+      RoleName: !If [ShouldNotCreateEnvResources, !Ref userpoolClientLambdaRole, !Join ['',['upClientLambdaRole', '2f74638c', !Select [3, !Split ['-', !Ref 'AWS::StackName']], '-', !Ref env]]]
+      AssumeRolePolicyDocument:
+        Version: '2012-10-17'
+        Statement:
+          - Effect: Allow
+            Principal:
+              Service:
+                - lambda.amazonaws.com
+            Action:
+              - 'sts:AssumeRole'
+    DependsOn: UserPoolClient
+  UserPoolClientLambda:
+  # Lambda which gets userpool app client config values
+  # Depends on UserPool for id
+  # Depends on UserPoolClientRole for role ARN
+    Type: 'AWS::Lambda::Function'
+    Properties:
+      Code:
+        ZipFile: !Join
+          - |+
+          - - 'const response = require(''cfn-response'');'
+            - 'const aws = require(''aws-sdk'');'
+            - 'const identity = new aws.CognitoIdentityServiceProvider();'
+            - 'exports.handler = (event, context, callback) => {'
+            - ' if (event.RequestType == ''Delete'') { '
+            - '   response.send(event, context, response.SUCCESS, {})'
+            - ' }'
+            - ' if (event.RequestType == ''Update'' || event.RequestType == ''Create'') {'
+            - '   const params = {'
+            - '     ClientId: event.ResourceProperties.clientId,'
+            - '     UserPoolId: event.ResourceProperties.userpoolId'
+            - '   };'
+            - '   identity.describeUserPoolClient(params).promise()'
+            - '     .then((res) => {'
+            - '       response.send(event, context, response.SUCCESS, {''appSecret'': res.UserPoolClient.ClientSecret});'
+            - '     })'
+            - '     .catch((err) => {'
+            - '       response.send(event, context, response.FAILED, {err});'
+            - '     });'
+            - ' }'
+            - '};'
+      Handler: index.handler
+      Runtime: nodejs12.x
+      Timeout: '300'
+      Role: !GetAtt
+        - UserPoolClientRole
+        - Arn
+    DependsOn: UserPoolClientRole
+  UserPoolClientLambdaPolicy:
+  # Sets userpool policy for the role that executes the Userpool Client Lambda
+  # Depends on UserPool for Arn
+  # Marked as depending on UserPoolClientRole for easier to understand CFN sequencing
+    Type: 'AWS::IAM::Policy'
+    Properties:
+      PolicyName: ayatas2f74638c_userpoolclient_lambda_iam_policy
+      Roles:
+        - !Ref UserPoolClientRole
+      PolicyDocument:
+        Version: '2012-10-17'
+        Statement:
+          - Effect: Allow
+            Action:
+              - 'cognito-idp:DescribeUserPoolClient'
+            Resource: !GetAtt UserPool.Arn
+    DependsOn: UserPoolClientLambda
+  UserPoolClientLogPolicy:
+  # Sets log policy for the role that executes the Userpool Client Lambda
+  # Depends on UserPool for Arn
+  # Marked as depending on UserPoolClientLambdaPolicy for easier to understand CFN sequencing
+    Type: 'AWS::IAM::Policy'
+    Properties:
+      PolicyName: ayatas2f74638c_userpoolclient_lambda_log_policy
+      Roles:
+        - !Ref UserPoolClientRole
+      PolicyDocument:
+        Version: 2012-10-17
+        Statement:
+          - Effect: Allow
+            Action:
+              - 'logs:CreateLogGroup'
+              - 'logs:CreateLogStream'
+              - 'logs:PutLogEvents'
+            Resource: !Sub
+              - arn:aws:logs:${region}:${account}:log-group:/aws/lambda/${lambda}:log-stream:*
+              - { region: !Ref "AWS::Region",  account: !Ref "AWS::AccountId", lambda: !Ref UserPoolClientLambda}
+    DependsOn: UserPoolClientLambdaPolicy
+  UserPoolClientInputs:
+  # Values passed to Userpool client Lambda
+  # Depends on UserPool for Id
+  # Depends on UserPoolClient for Id
+  # Marked as depending on UserPoolClientLambdaPolicy for easier to understand CFN sequencing
+    Type: 'Custom::LambdaCallout'
+    Properties:
+      ServiceToken: !GetAtt UserPoolClientLambda.Arn
+      clientId: !Ref UserPoolClient
+      userpoolId: !Ref UserPool
+    DependsOn: UserPoolClientLogPolicy
+  
+  HostedUICustomResource:
+    Type: 'AWS::Lambda::Function'
+    Properties:
+      Code:
+        ZipFile: !Join
+          - |+
+          - - 'const response = require(''cfn-response'');'
+            - 'const aws = require(''aws-sdk'');'
+            - 'const identity = new aws.CognitoIdentityServiceProvider();'
+            - 'exports.handler = (event, context, callback) => {'
+            - ' const userPoolId = event.ResourceProperties.userPoolId;'
+            - ' const inputDomainName = event.ResourceProperties.hostedUIDomainName;'
+            - ' let deleteUserPoolDomain = (domainName) => {'
+            - '   let params = { Domain: domainName, UserPoolId: userPoolId };'
+            - '   return identity.deleteUserPoolDomain(params).promise();'
+            - ' };'
+            - ' if (event.RequestType == ''Delete'') {'
+            - '   deleteUserPoolDomain(inputDomainName)'
+            - '   .then(() => {response.send(event, context, response.SUCCESS, {})})'
+            - '   .catch((err) => { console.log(err); response.send(event, context, response.FAILED, {err}) });'
+            - ' }'
+            - ' if (event.RequestType == ''Update'' || event.RequestType == ''Create'') {'
+            - '  let checkDomainAvailability = (domainName) => {'
+            - '  let params = { Domain: domainName };'
+            - '  return identity.describeUserPoolDomain(params).promise().then((res) => {'
+            - '   if (res.DomainDescription && res.DomainDescription.UserPool) {'
+            - '    return false;'
+            - '   }'
+            - '   return true;'
+            - '   }).catch((err) => { return false; });'
+            - ' };'
+            - ' let createUserPoolDomain = (domainName) => {'
+            - '  let params = { Domain: domainName, UserPoolId: userPoolId };'
+            - '   return identity.createUserPoolDomain(params).promise();'
+            - ' };'
+            - ' identity.describeUserPool({UserPoolId: userPoolId }).promise().then((result) => {'
+            - '  if (inputDomainName) {'
+            - '   if (result.UserPool.Domain === inputDomainName) {'
+            - '    return;'
+            - '    } else {'
+            - '       if (!result.UserPool.Domain) {'
+            - '         return checkDomainAvailability(inputDomainName).then((isDomainAvailable) => {'
+            - '           if (isDomainAvailable) {'
+            - '             return createUserPoolDomain(inputDomainName);'
+            - '           } else {'
+            - '               throw new Error(''Domain not available'');'
+            - '           }'
+            - '         });'
+            - '       } else {'
+            - '           return checkDomainAvailability(inputDomainName).then((isDomainAvailable) => {'
+            - '             if (isDomainAvailable) {'
+            - '               return deleteUserPoolDomain(result.UserPool.Domain).then(() => createUserPoolDomain(inputDomainName));'
+            - '             } else {'
+            - '                 throw new Error(''Domain not available'');'
+            - '             }'
+            - '           });'
+            - '       }'
+            - '     }'
+            - '   } else {'
+            - '       if (result.UserPool.Domain) {'
+            - '         return deleteUserPoolDomain(result.UserPool.Domain);'
+            - '       }'
+            - '   }'
+            - ' }).then(() => {response.send(event, context, response.SUCCESS, {})}).catch((err) => {'
+            - ' console.log(err);  response.send(event, context, response.FAILED, {err});'
+            - ' });'
+            - '}}'
+
+
+      Handler: index.handler
+      Runtime: nodejs12.x
+      Timeout: '300'
+      Role: !GetAtt
+        - UserPoolClientRole
+        - Arn
+    DependsOn: UserPoolClientRole
+
+  HostedUICustomResourcePolicy:
+    Type: 'AWS::IAM::Policy'
+    Properties:
+      PolicyName: !Join ['-',[!Ref UserPool, 'hostedUI']]
+      Roles:
+        - !Ref UserPoolClientRole
+      PolicyDocument:
+        Version: '2012-10-17'
+        Statement:
+          - Effect: Allow
+            Action:
+              - 'cognito-idp:CreateUserPoolDomain'
+              - 'cognito-idp:DescribeUserPool'
+              - 'cognito-idp:DeleteUserPoolDomain'
+            Resource: !GetAtt UserPool.Arn
+          - Effect: Allow
+            Action:
+              - 'cognito-idp:DescribeUserPoolDomain'
+            Resource: '*'
+    DependsOn: HostedUICustomResource
+  HostedUICustomResourceLogPolicy:
+    Type: 'AWS::IAM::Policy'
+    Properties:
+      PolicyName: !Join ['-',[!Ref UserPool, 'hostedUILogPolicy']]
+      Roles:
+        - !Ref UserPoolClientRole
+      PolicyDocument:
+        Version: 2012-10-17
+        Statement:
+          - Effect: Allow
+            Action:
+              - 'logs:CreateLogGroup'
+              - 'logs:CreateLogStream'
+              - 'logs:PutLogEvents'
+            Resource: !Sub
+              - arn:aws:logs:${region}:${account}:log-group:/aws/lambda/${lambda}:log-stream:*
+              - { region: !Ref "AWS::Region",  account: !Ref "AWS::AccountId", lambda: !Ref HostedUICustomResource}
+    DependsOn: HostedUICustomResourcePolicy
+  HostedUICustomResourceInputs:
+    Type: 'Custom::LambdaCallout'
+    Properties:
+      ServiceToken: !GetAtt HostedUICustomResource.Arn
+      userPoolId: !Ref UserPool
+      hostedUIDomainName: !If [ShouldNotCreateEnvResources, !Ref hostedUIDomainName, !Join ['-',[!Ref hostedUIDomainName, !Ref env]]]
+    DependsOn: HostedUICustomResourceLogPolicy
+  
+
+  
+  HostedUIProvidersCustomResource:
+    Type: 'AWS::Lambda::Function'
+    Properties:
+      Code:
+        ZipFile: !Join
+          - |+
+          - - 'const response = require(''cfn-response'');'
+            - 'const aws = require(''aws-sdk'');'
+            - 'const identity = new aws.CognitoIdentityServiceProvider();'
+            - 'exports.handler = (event, context, callback) => {'
+            - 'try{'
+            - ' const userPoolId = event.ResourceProperties.userPoolId;'
+            - ' let hostedUIProviderMeta = JSON.parse(event.ResourceProperties.hostedUIProviderMeta);'
+            - ' let hostedUIProviderCreds = JSON.parse(event.ResourceProperties.hostedUIProviderCreds);'
+            - ' if(hostedUIProviderCreds.length === 0) {'
+            - '  response.send(event, context, response.SUCCESS, {});'
+            - ' }'
+            - ' if (event.RequestType == ''Delete'') {'
+            - '  response.send(event, context, response.SUCCESS, {});'
+            - ' }'
+            - ' if (event.RequestType == ''Update'' || event.RequestType == ''Create'') {'
+            - '  let getRequestParams = (providerName) => {'
+            - '   let providerMetaIndex = hostedUIProviderMeta.findIndex((provider) => provider.ProviderName === providerName);'
+            - '   let providerMeta =  hostedUIProviderMeta[providerMetaIndex];'
+            - '   let providerCredsIndex = hostedUIProviderCreds.findIndex((provider) => provider.ProviderName === providerName);'
+            - '   let providerCreds = hostedUIProviderCreds[providerCredsIndex];'
+            - '   let requestParams = {'
+            - '    ProviderDetails: {'
+            - '     ''client_id'': providerCreds.client_id,'
+            - '     ''client_secret'': providerCreds.client_secret,'
+            - '     ''authorize_scopes'': providerMeta.authorize_scopes'
+            - '    },'
+            - '    ProviderName: providerMeta.ProviderName,'
+            - '    UserPoolId: userPoolId,'
+            - '    AttributeMapping: providerMeta.AttributeMapping'
+            - '   };'
+            - '   return requestParams;'
+            - '  };'
+            - '  let createIdentityProvider = (providerName) => {'
+            - '   let requestParams = getRequestParams(providerName);'
+            - '   requestParams.ProviderType = requestParams.ProviderName;'
+            - '   return identity.createIdentityProvider(requestParams).promise();'
+            - '  };'
+            - '  let updateIdentityProvider = (providerName) => {'
+            - '   let requestParams = getRequestParams(providerName);'
+            - '   return identity.updateIdentityProvider(requestParams).promise();'
+            - '  };'
+            - '  let deleteIdentityProvider = (providerName) => {'
+            - '   let params = {ProviderName: providerName, UserPoolId: userPoolId};'
+            - '   return identity.deleteIdentityProvider(params).promise();'
+            - '  };'
+            - '  let providerPromises = [];'
+            - '  identity.listIdentityProviders({UserPoolId: userPoolId, MaxResults: 60}).promise()'
+            - '  .then((result) => {'
+            - '   let providerList = result.Providers.map(provider => provider.ProviderName);'
+            - '   let providerListInParameters = hostedUIProviderMeta.map(provider => provider.ProviderName);'
+            - '   hostedUIProviderMeta.forEach((providerMetadata) => {'
+            - '    if(providerList.indexOf(providerMetadata.ProviderName) > -1) {'
+            - '     providerPromises.push(updateIdentityProvider(providerMetadata.ProviderName));'
+            - '    } else {'
+            - '     providerPromises.push(createIdentityProvider(providerMetadata.ProviderName));'
+            - '    }'
+            - '  });'
+            - '  providerList.forEach((provider) => {'
+            - '   if(providerListInParameters.indexOf(provider) < 0) {'
+            - '    providerPromises.push(deleteIdentityProvider(provider));'
+            - '   }'
+            - '  });'
+            - '  return Promise.all(providerPromises);'
+            - ' }).then(() => {response.send(event, context, response.SUCCESS, {})}).catch((err) => {'
+            - '   console.log(err.stack); response.send(event, context, response.FAILED, {err})'
+            - ' });'
+            - ' } '
+            - ' } catch(err) { console.log(err.stack); response.send(event, context, response.FAILED, {err});};'
+            - '} '
+
+      Handler: index.handler
+      Runtime: nodejs12.x
+      Timeout: '300'
+      Role: !GetAtt
+        - UserPoolClientRole
+        - Arn
+    DependsOn: UserPoolClientRole
+
+  HostedUIProvidersCustomResourcePolicy:
+    Type: 'AWS::IAM::Policy'
+    Properties:
+      PolicyName: !Join ['-',[!Ref UserPool, 'hostedUIProvider']]
+      Roles:
+        - !Ref UserPoolClientRole
+      PolicyDocument:
+        Version: '2012-10-17'
+        Statement:
+          - Effect: Allow
+            Action:
+              - 'cognito-idp:CreateIdentityProvider'
+              - 'cognito-idp:UpdateIdentityProvider'
+              - 'cognito-idp:ListIdentityProviders'
+              - 'cognito-idp:DeleteIdentityProvider'
+            Resource: !GetAtt UserPool.Arn
+    DependsOn: HostedUIProvidersCustomResource
+
+  HostedUIProvidersCustomResourceLogPolicy:
+    Type: 'AWS::IAM::Policy'
+    Properties:
+      PolicyName: !Join ['-',[!Ref UserPool, 'hostedUIProviderLogPolicy']]
+      Roles:
+        - !Ref UserPoolClientRole
+      PolicyDocument:
+        Version: 2012-10-17
+        Statement:
+          - Effect: Allow
+            Action:
+              - 'logs:CreateLogGroup'
+              - 'logs:CreateLogStream'
+              - 'logs:PutLogEvents'
+            Resource: !Sub
+              - arn:aws:logs:${region}:${account}:log-group:/aws/lambda/${lambda}:log-stream:*
+              - { region: !Ref "AWS::Region",  account: !Ref "AWS::AccountId", lambda: !Ref HostedUIProvidersCustomResource}
+    DependsOn: HostedUIProvidersCustomResourcePolicy
+
+  HostedUIProvidersCustomResourceInputs:
+    Type: 'Custom::LambdaCallout'
+    Properties:
+      ServiceToken: !GetAtt HostedUIProvidersCustomResource.Arn
+      userPoolId: !Ref UserPool
+      hostedUIProviderMeta: !Ref hostedUIProviderMeta
+      hostedUIProviderCreds: !Ref hostedUIProviderCreds
+    DependsOn: HostedUIProvidersCustomResourceLogPolicy
+  
+  
+  OAuthCustomResource:
+    Type: 'AWS::Lambda::Function'
+    Properties:
+      Code:
+        ZipFile: !Join
+          - |+
+          - - 'const response = require(''cfn-response'');'
+            - 'const aws = require(''aws-sdk'');'
+            - 'const identity = new aws.CognitoIdentityServiceProvider();'
+            - 'exports.handler = (event, context, callback) => {'
+            - 'try{'
+            - ' const userPoolId = event.ResourceProperties.userPoolId;'
+            - ' let webClientId = event.ResourceProperties.webClientId;'
+            - ' let nativeClientId = event.ResourceProperties.nativeClientId;'
+            - ' let hostedUIProviderMeta = JSON.parse(event.ResourceProperties.hostedUIProviderMeta);'
+            - ' let oAuthMetadata = JSON.parse(event.ResourceProperties.oAuthMetadata);'
+            - ' let providerList = hostedUIProviderMeta.map(provider => provider.ProviderName);'
+            - ' providerList.push(''COGNITO'');'
+            - ' if (event.RequestType == ''Delete'') {'
+            - '  response.send(event, context, response.SUCCESS, {});'
+            - ' }'
+            - ' if (event.RequestType == ''Update'' || event.RequestType == ''Create'') {'
+            - '  let params = {'
+            - '   UserPoolId: userPoolId,'
+            - '   AllowedOAuthFlows: oAuthMetadata.AllowedOAuthFlows,'
+            - '   AllowedOAuthFlowsUserPoolClient: true,'
+            - '   AllowedOAuthScopes: oAuthMetadata.AllowedOAuthScopes,'
+            - '   CallbackURLs: oAuthMetadata.CallbackURLs,'
+            - '   LogoutURLs: oAuthMetadata.LogoutURLs,'
+            - '   SupportedIdentityProviders: providerList'
+            - '  };'
+            - '  let updateUserPoolClientPromises = [];'
+            - '  params.ClientId = webClientId;'
+            - '  updateUserPoolClientPromises.push(identity.updateUserPoolClient(params).promise());'
+            - '  params.ClientId = nativeClientId;'
+            - '  updateUserPoolClientPromises.push(identity.updateUserPoolClient(params).promise());'
+            - '  Promise.all(updateUserPoolClientPromises)'
+            - '  .then(() => {response.send(event, context, response.SUCCESS, {})}).catch((err) => {'
+            - '    console.log(err.stack); response.send(event, context, response.FAILED, {err});'
+            - '  });'
+            - ' }'
+            - '} catch(err) { console.log(err.stack); response.send(event, context, response.FAILED, {err});};'
+            - '}'
+
+      Handler: index.handler
+      Runtime: nodejs12.x
+      Timeout: '300'
+      Role: !GetAtt
+        - UserPoolClientRole
+        - Arn
+    DependsOn: HostedUIProvidersCustomResourceInputs
+
+  OAuthCustomResourcePolicy:
+    Type: 'AWS::IAM::Policy'
+    Properties:
+      PolicyName: !Join ['-',[!Ref UserPool, 'OAuth']]
+      Roles:
+        - !Ref UserPoolClientRole
+      PolicyDocument:
+        Version: '2012-10-17'
+        Statement:
+          - Effect: Allow
+            Action:
+              - 'cognito-idp:UpdateUserPoolClient'
+            Resource: !GetAtt UserPool.Arn
+    DependsOn: OAuthCustomResource
+
+  OAuthCustomResourceLogPolicy:
+    Type: 'AWS::IAM::Policy'
+    Properties:
+      PolicyName: !Join ['-',[!Ref UserPool, 'OAuthLogPolicy']]
+      Roles:
+        - !Ref UserPoolClientRole
+      PolicyDocument:
+        Version: 2012-10-17
+        Statement:
+          - Effect: Allow
+            Action:
+              - 'logs:CreateLogGroup'
+              - 'logs:CreateLogStream'
+              - 'logs:PutLogEvents'
+            Resource: !Sub
+              - arn:aws:logs:${region}:${account}:log-group:/aws/lambda/${lambda}:log-stream:*
+              - { region: !Ref "AWS::Region",  account: !Ref "AWS::AccountId", lambda: !Ref OAuthCustomResource}
+    DependsOn: OAuthCustomResourcePolicy
+
+  OAuthCustomResourceInputs:
+    Type: 'Custom::LambdaCallout'
+    Properties:
+      ServiceToken: !GetAtt OAuthCustomResource.Arn
+      userPoolId: !Ref UserPool
+      hostedUIProviderMeta: !Ref hostedUIProviderMeta
+      oAuthMetadata: !Ref oAuthMetadata
+      webClientId: !Ref 'UserPoolClientWeb'
+      nativeClientId: !Ref 'UserPoolClient'
+    DependsOn: OAuthCustomResourceLogPolicy
+  
+
+  
+    
+  # BEGIN IDENTITY POOL RESOURCES
+  
+
+  IdentityPool:
+  # Always created
+    Type: AWS::Cognito::IdentityPool
+    Properties:
+      IdentityPoolName: !If [ShouldNotCreateEnvResources, 'ayataskmaster2f74638c_identitypool_2f74638c', !Join ['',['ayataskmaster2f74638c_identitypool_2f74638c', '__', !Ref env]]]
+      
+      CognitoIdentityProviders:
+        - ClientId:  !Ref UserPoolClient
+          ProviderName: !Sub
+            - cognito-idp.${region}.amazonaws.com/${client}
+            - { region: !Ref "AWS::Region",  client: !Ref UserPool}
+        - ClientId:  !Ref UserPoolClientWeb
+          ProviderName: !Sub
+            - cognito-idp.${region}.amazonaws.com/${client}
+            - { region: !Ref "AWS::Region",  client: !Ref UserPool}
+            
+      AllowUnauthenticatedIdentities: !Ref allowUnauthenticatedIdentities
+      
+    
+    DependsOn: UserPoolClientInputs
+    
+
+  IdentityPoolRoleMap:
+  # Created to map Auth and Unauth roles to the identity pool
+  # Depends on Identity Pool for ID ref
+    Type: AWS::Cognito::IdentityPoolRoleAttachment
+    Properties:
+      IdentityPoolId: !Ref IdentityPool
+      Roles:
+          unauthenticated: !Ref unauthRoleArn
+          authenticated: !Ref authRoleArn
+    DependsOn: IdentityPool
+  
+
+Outputs :
+  
+  IdentityPoolId:
+    Value: !Ref 'IdentityPool'
+    Description:  Id for the identity pool
+  IdentityPoolName:
+    Value: !GetAtt IdentityPool.Name
+  
+  
+  HostedUIDomain:
+    Value: !If [ShouldNotCreateEnvResources, !Ref hostedUIDomainName, !Join ['-',[!Ref hostedUIDomainName, !Ref env]]]
+  
+  
+  OAuthMetadata:
+    Value: !Ref oAuthMetadata
+  
+  
+  UserPoolId:
+    Value: !Ref 'UserPool'
+    Description:  Id for the user pool
+  UserPoolArn:
+    Value: !GetAtt UserPool.Arn
+    Description:  Arn for the user pool
+  UserPoolName:
+    Value: !Ref userPoolName
+  AppClientIDWeb:
+    Value: !Ref 'UserPoolClientWeb'
+    Description: The user pool app client id for web
+  AppClientID:
+    Value: !Ref 'UserPoolClient'
+    Description: The user pool app client id
+  AppClientSecret:
+    Value: !GetAtt UserPoolClientInputs.appSecret
+    Condition: ShouldOutputAppClientSecrets
+  
+  
+  
+  
+  
+  
+  
